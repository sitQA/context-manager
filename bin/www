#!/usr/bin/env node

var app = require('../app');
var conf = require('../config/conf');
var debug = require('debug')('context-manager:server');
var http = require('http');
var mongo = require('../db/mongo');
var amqp = require('../amqp/amqpSender');

var port = conf.get('port');
app.set('port', port);
var server = http.createServer(app);

mongo.connect(db => {
  amqp.connect(() => {
    app.locals.db = db;
    server.listen(port);
    server.on('error', onError);
    server.on('listening', onListening);
  })

});


/**
 * Event listener for HTTP server "error" event.
 */
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */
function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
    console.log('Listening on ' + bind);
}
